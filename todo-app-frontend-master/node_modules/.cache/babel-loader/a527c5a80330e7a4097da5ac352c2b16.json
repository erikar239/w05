{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avatar\\\\w05\\\\w05\\\\todo-app-frontend-master\\\\src\\\\views\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport Masonry from 'react-masonry-component';\nimport Todo from \"../components/Todo\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      low: true,\n      medium: true,\n      height: true\n    };\n\n    this.handleChecked = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            checked = _event$target.checked;\n      this.setState({\n        [name]: checked\n      });\n    };\n  }\n\n  render() {\n    const todos = this.props.todos;\n    const _this$state = this.state,\n          low = _this$state.low,\n          medium = _this$state.medium,\n          height = _this$state.height;\n    let finalTodos = [];\n\n    if (low === true) {\n      const filteredCheck = todos.filter(todo => {\n        return todo.importance === 'low';\n      });\n      finalTodos = finalTodos.concat(filteredCheck);\n    }\n\n    if (medium === true) {\n      const filteredCheck = todos.filter(todo => {\n        return todo.importance === 'medium';\n      });\n      finalTodos = finalTodos.concat(filteredCheck);\n    }\n\n    if (height === true) {\n      const filteredCheck = todos.filter(todo => {\n        return todo.importance === 'height';\n      });\n      finalTodos = finalTodos.concat(filteredCheck);\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline1\",\n      name: \"low\",\n      checked: low,\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"defaultInline1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"importanceIcon dotLow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" \"), \"low\")), React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline2\",\n      name: \"medium\",\n      checked: medium,\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"defaultInline2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"importanceIcon dotMedium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" \"), \"medium\")), React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline3\",\n      name: \"height\",\n      checked: height,\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      for: \"defaultInline3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"importanceIcon dotHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" \"), \"height\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Masonry, {\n      className: \"todos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, finalTodos.map(todoData => {\n      const handleStartTodo = () => {\n        todoData.state = 'inProgress';\n        this.props.onEdit(todoData);\n      };\n\n      const handleFinishTodo = () => {\n        todoData.state = 'finished';\n        this.props.onEdit(todoData);\n      };\n\n      const handleRemoveTodo = () => {\n        this.props.onRemove(todoData);\n      };\n\n      return React.createElement(Todo, {\n        todo: todoData,\n        key: todoData.id,\n        onStart: handleStartTodo,\n        onFinish: handleFinishTodo,\n        onRemove: handleRemoveTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\Avatar\\w05\\w05\\todo-app-frontend-master\\src\\views\\TodoList.js"],"names":["React","Component","Masonry","Todo","TodoList","state","low","medium","height","handleChecked","event","target","name","checked","setState","render","todos","props","finalTodos","filteredCheck","filter","todo","importance","concat","map","todoData","handleStartTodo","onEdit","handleFinishTodo","handleRemoveTodo","onRemove","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Masonry from 'react-masonry-component';\n\nimport Todo from \"../components/Todo\";\n\nclass TodoList extends Component {\n\n state = {\n   low: true,\n   medium: true,\n   height: true\n };\n\n handleChecked = event => {\n  const { name, checked } = event.target;\n\n  this.setState({\n    [name]: checked\n  });\n};\n\n\n  render() {\n    const todos = this.props.todos;\n    const {low, medium, height} = this.state;\n  \n    let finalTodos = [];\n\n        if (low === true) {\n          const filteredCheck = todos.filter(todo => {\n          return todo.importance === 'low';\n          });\n        finalTodos = finalTodos.concat(filteredCheck);\n        }\n\n        if (medium === true) {\n          const filteredCheck = todos.filter(todo => {\n            return todo.importance === 'medium';\n          });\n          finalTodos = finalTodos.concat(filteredCheck);\n        }\n\n        if (height === true) {\n          const filteredCheck = todos.filter(todo => {\n            return todo.importance === 'height';\n          });\n          finalTodos = finalTodos.concat(filteredCheck);\n        }\n\n    return (\n    <>\n      <div className=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline1\"\n          name = \"low\"\n          checked= {low}\n          onChange={this.handleChecked}\n        />\n        <label className=\"custom-control-label\" htmlFor=\"defaultInline1\" >\n          <span className=\"importanceIcon dotLow\"></span> \n          <span> </span>\n          low\n        </label>\n      </div>\n\n      <div className=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline2\"\n          name = \"medium\"\n          checked= {medium}\n          onChange={this.handleChecked}\n        />\n        <label className=\"custom-control-label\" htmlFor=\"defaultInline2\">\n        <span className=\"importanceIcon dotMedium\"></span> \n        <span> </span>\n        medium</label>\n      </div>\n\n      <div className=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline3\"\n          name = \"height\"\n          checked= {height}\n          onChange={this.handleChecked}\n        />\n        <label className=\"custom-control-label\" for=\"defaultInline3\">\n        <span className=\"importanceIcon dotHeight\"></span> \n        <span> </span>\n        height</label>\n        <br/>\n        <br/>\n      </div>\n      \n      <Masonry className=\"todos\">\n        {finalTodos.map((todoData) => {\n\n          const handleStartTodo = () => {\n            todoData.state = 'inProgress';\n            this.props.onEdit(todoData);\n          }\n          const handleFinishTodo = () => {\n            todoData.state = 'finished';\n            this.props.onEdit(todoData);\n          };\n\n          const handleRemoveTodo = () => {\n            this.props.onRemove(todoData);\n          };\n\n          return (\n            <Todo\n              todo={todoData}\n              key={todoData.id}\n              onStart={handleStartTodo}\n              onFinish={handleFinishTodo}\n              onRemove={handleRemoveTodo}\n            />\n          );\n        })}\n      </Masonry>\n      </>\n\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}