{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avatar\\\\w05\\\\w05\\\\todo-app-frontend-master\\\\src\\\\views\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport Masonry from 'react-masonry-component';\nimport Todo from \"../components/Todo\";\n\nclass TodoList extends Component {\n  render() {\n    const todos = this.props.todos;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      class: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline1\",\n      name: \"importance\",\n      checked: this.props.importance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"defaultInline1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.importance)), React.createElement(\"div\", {\n      class: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline1\",\n      name: \"importance\",\n      checked: this.props.importance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"defaultInline1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.importance)), React.createElement(\"div\", {\n      class: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline1\",\n      name: \"importance\",\n      checked: this.props.importance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"defaultInline1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.importance)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Masonry, {\n      className: \"todos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, todos.map(todoData => {\n      const handleStartTodo = () => {\n        todoData.state = 'inProgress';\n        this.props.onEdit(todoData);\n      };\n\n      const handleFinishTodo = () => {\n        todoData.state = 'finished';\n        this.props.onEdit(todoData);\n      };\n\n      const handleRemoveTodo = () => {\n        this.props.onRemove(todoData);\n      };\n\n      return React.createElement(Todo, {\n        todo: todoData,\n        key: todoData.id,\n        onStart: handleStartTodo,\n        onFinish: handleFinishTodo,\n        onRemove: handleRemoveTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\Avatar\\w05\\w05\\todo-app-frontend-master\\src\\views\\TodoList.js"],"names":["React","Component","Masonry","Todo","TodoList","render","todos","props","importance","map","todoData","handleStartTodo","state","onEdit","handleFinishTodo","handleRemoveTodo","onRemove","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Masonry from 'react-masonry-component';\n\nimport Todo from \"../components/Todo\";\n\nclass TodoList extends Component {\n  render() {\n    const todos = this.props.todos;\n    \n    return (\n    <>\n     \n      <div class=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline1\"\n          name = \"importance\"\n          checked={this.props.importance}\n        />\n        <label class=\"custom-control-label\" for=\"defaultInline1\">{this.props.importance}</label>\n      </div>\n\n\n      <div class=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline1\"\n          name = \"importance\"\n          checked={this.props.importance}\n        />\n        <label class=\"custom-control-label\" for=\"defaultInline1\">{this.props.importance}</label>\n      </div>\n\n\n      <div class=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline1\"\n          name = \"importance\"\n          checked={this.props.importance}\n        />\n        <label class=\"custom-control-label\" for=\"defaultInline1\">{this.props.importance}</label>\n      </div>\n      <br/>\n    \n      <Masonry className=\"todos\">\n        {todos.map((todoData) => {\n\n          const handleStartTodo = () => {\n            todoData.state = 'inProgress';\n            this.props.onEdit(todoData);\n          }\n          const handleFinishTodo = () => {\n            todoData.state = 'finished';\n            this.props.onEdit(todoData);\n          };\n\n          const handleRemoveTodo = () => {\n            this.props.onRemove(todoData);\n          };\n\n          return (\n            <Todo\n              todo={todoData}\n              key={todoData.id}\n              onStart={handleStartTodo}\n              onFinish={handleFinishTodo}\n              onRemove={handleRemoveTodo}\n            />\n          );\n        })}\n      </Masonry>\n      </>\n\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}