{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avatar\\\\w05\\\\w05\\\\todo-app-frontend-master\\\\src\\\\views\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport Masonry from 'react-masonry-component';\nimport Todo from \"../components/Todo\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Low: true,\n      Medium: true,\n      Hight: true\n    };\n\n    this.handleCheched = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            checked = _event$target.checked;\n      this.setState({\n        [name]: checked\n      });\n    };\n  }\n\n  render() {\n    const todos = this.props.todos;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      class: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline1\",\n      name: \"importance\",\n      checked: \"true\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"defaultInline1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"importanceIcon dotLow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \"low\")), React.createElement(\"div\", {\n      class: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline1\",\n      name: \"importance\",\n      checked: this.props.importance,\n      onChange: this.props.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"defaultInline2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"importanceIcon dotMedium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \" medium\")), React.createElement(\"div\", {\n      class: \"custom-control custom-checkbox custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"defaultInline1\",\n      name: \"importance\",\n      checked: this.props.importance,\n      onChange: this.props.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"defaultInline3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"importanceIcon dotHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \" height\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Masonry, {\n      className: \"todos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, todos.map(todoData => {\n      const handleStartTodo = () => {\n        todoData.state = 'inProgress';\n        this.props.onEdit(todoData);\n      };\n\n      const handleFinishTodo = () => {\n        todoData.state = 'finished';\n        this.props.onEdit(todoData);\n      };\n\n      const handleRemoveTodo = () => {\n        this.props.onRemove(todoData);\n      };\n\n      return React.createElement(Todo, {\n        todo: todoData,\n        key: todoData.id,\n        onStart: handleStartTodo,\n        onFinish: handleFinishTodo,\n        onRemove: handleRemoveTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\Avatar\\w05\\w05\\todo-app-frontend-master\\src\\views\\TodoList.js"],"names":["React","Component","Masonry","Todo","TodoList","state","Low","Medium","Hight","handleCheched","event","target","name","checked","setState","render","todos","props","handleChange","importance","map","todoData","handleStartTodo","onEdit","handleFinishTodo","handleRemoveTodo","onRemove","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Masonry from 'react-masonry-component';\n\nimport Todo from \"../components/Todo\";\n\nclass TodoList extends Component {\n\n state = {\n   Low: true,\n   Medium: true,\n   Hight: true\n };\n\n handleCheched = event => {\n  const { name, checked } = event.target;\n\n  this.setState({\n    [name]:checked\n  });\n};\n\n  render() {\n    const todos = this.props.todos;\n    \n    return (\n    <>\n     \n      <div class=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline1\"\n          name = \"importance\"\n          checked=\"true\"\n          onChange={this.handleChange}\n        />\n        <label class=\"custom-control-label\" for=\"defaultInline1\">\n          <span className=\"importanceIcon dotLow\"></span> \n          low\n        </label>\n      </div>\n\n      <div class=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline1\"\n          name = \"importance\"\n          checked={this.props.importance}\n          onChange={this.props.handleChange}\n        />\n        <label class=\"custom-control-label\" for=\"defaultInline2\"><span className=\"importanceIcon dotMedium\"></span> medium</label>\n      </div>\n\n      <div class=\"custom-control custom-checkbox custom-control-inline\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-control-input\" \n          id=\"defaultInline1\"\n          name = \"importance\"\n          checked={this.props.importance}\n          onChange={this.props.handleChange}\n        />\n        <label class=\"custom-control-label\" for=\"defaultInline3\"><span className=\"importanceIcon dotHeight\"></span> height</label>\n        <br/>\n        <br/>\n      </div>\n\n      \n    \n      <Masonry className=\"todos\">\n        {todos.map((todoData) => {\n\n          const handleStartTodo = () => {\n            todoData.state = 'inProgress';\n            this.props.onEdit(todoData);\n          }\n          const handleFinishTodo = () => {\n            todoData.state = 'finished';\n            this.props.onEdit(todoData);\n          };\n\n          const handleRemoveTodo = () => {\n            this.props.onRemove(todoData);\n          };\n\n          return (\n            <Todo\n              todo={todoData}\n              key={todoData.id}\n              onStart={handleStartTodo}\n              onFinish={handleFinishTodo}\n              onRemove={handleRemoveTodo}\n            />\n          );\n        })}\n      </Masonry>\n      </>\n\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}