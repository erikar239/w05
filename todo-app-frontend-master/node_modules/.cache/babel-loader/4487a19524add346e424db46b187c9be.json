{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avatar\\\\w05\\\\w05\\\\todo-app-frontend-master\\\\src\\\\components\\\\Todo.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../axios\";\nimport TodoButtons from \"./TodoButtons\";\nimport moment from \"moment\";\n\nclass Todo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderText = () => {\n      const text = this.props.todo.text;\n      if (!text) return null;\n      return React.createElement(\"div\", {\n        className: \"card-text\",\n        dangerouslySetInnerHTML: {\n          __html: text\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    };\n\n    this.renderImportance = () => {\n      const importance = this.props.todo.importance;\n      let icon = \"importanceIcon\";\n      if (!importance) return null;\n\n      if (importance.value === \"low\") {\n        icon += \"dotLow\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, importance);\n    };\n\n    this.handleStart = async () => {\n      await axios.patch(\"/todos/\" + this.props.todo.id, {\n        todoState: 'inProgress'\n      });\n      this.props.onStart();\n    };\n\n    this.handleFinish = async () => {\n      await axios.patch(\"/todos/\" + this.props.todo.id, {\n        todoState: 'finished'\n      });\n      this.props.onFinish();\n    };\n\n    this.handleRemove = async () => {\n      await axios.delete(\"/todos/\" + this.props.todo.id);\n      this.props.onRemove();\n    };\n  }\n\n  render() {\n    const _this$props$todo = this.props.todo,\n          createdAt = _this$props$todo.createdAt,\n          title = _this$props$todo.title,\n          state = _this$props$todo.state;\n    let classes = \"card\";\n\n    if (state === 'finished') {\n      classes += \" border-success\";\n    } else if (state === 'inProgress') {\n      classes += \" border-in-progress \";\n    } else {\n      classes = \"border-non-success\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"todo mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, title), React.createElement(\"h6\", {\n      className: \"card-subtitle text-muted mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Pridan\\xE9: \", moment(createdAt).format(\"DD MMM.'YY\")), this.renderText(), React.createElement(TodoButtons, {\n      todo: this.props.todo,\n      onStart: this.handleStart,\n      onFinish: this.handleFinish,\n      onRemove: this.handleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.renderImportance())));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["C:\\Users\\Avatar\\w05\\w05\\todo-app-frontend-master\\src\\components\\Todo.js"],"names":["React","Component","axios","TodoButtons","moment","Todo","renderText","text","props","todo","__html","renderImportance","importance","icon","value","handleStart","patch","id","todoState","onStart","handleFinish","onFinish","handleRemove","delete","onRemove","render","createdAt","title","state","classes","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport axios from \"../axios\";\n\nimport TodoButtons from \"./TodoButtons\";\nimport moment from \"moment\";\n\nclass Todo extends Component {\n  renderText = () => {\n    const { text } = this.props.todo;\n    if (!text) return null;\n\n    return (\n      <div className=\"card-text\" dangerouslySetInnerHTML={{ __html: text }} />\n    );\n  };\n\n  renderImportance = () => {\n    const { importance } = this.props.todo;\n    let icon = \"importanceIcon\";\n    if (!importance) return null;\n\n    if (importance.value===\"low\") {\n      icon += \"dotLow\"\n    }\n\n    return (\n      <div>{importance}</div>\n    );\n  }\n\n \n  handleStart = async () => {\n    await axios.patch(\"/todos/\" + this.props.todo.id, {\n      todoState: 'inProgress'\n    })\n    this.props.onStart();\n  }\n\n  handleFinish = async () => {\n    await axios.patch(\"/todos/\" + this.props.todo.id, {\n      todoState: 'finished'\n    });\n    this.props.onFinish();\n  };\n\n  handleRemove = async () => {\n    await axios.delete(\"/todos/\" + this.props.todo.id);\n    this.props.onRemove();\n  };\n\n  render() {\n    const { createdAt, title, state } = this.props.todo;\n    let classes = \"card\";\n    if (state === 'finished') {\n      classes += \" border-success\"\n    } \n    else if (state === 'inProgress') {\n      classes += \" border-in-progress \" \n    }\n    else {\n      classes = \"border-non-success\"\n    }\n\n    return (\n      <div className=\"todo mb-2\">\n        <div className={classes}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{title}</h5>\n            <h6 className=\"card-subtitle text-muted mb-2\">\n              Pridan√©: {moment(createdAt).format(\"DD MMM.'YY\")}\n            </h6>\n            {this.renderText()}\n            <TodoButtons\n              todo={this.props.todo}\n              onStart = {this.handleStart}\n              onFinish={this.handleFinish}\n              onRemove={this.handleRemove}\n            />\n          </div>\n            <div className=\"card-footer\">\n              {this.renderImportance()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}